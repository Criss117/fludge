/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthEmployeeSignInRouteImport } from './routes/auth/employee/sign-in'
import { Route as privateBusinessSelectBusinessRouteImport } from './routes/(private)/business/select-business'
import { Route as privateBusinessRegisterRouteImport } from './routes/(private)/business/register'
import { Route as privateBusinessIdRouteImport } from './routes/(private)/business/$id'
import { Route as privateBusinessIdIndexRouteImport } from './routes/(private)/business/$id/index'
import { Route as privateBusinessIdSettingsRouteImport } from './routes/(private)/business/$id/settings'
import { Route as privateBusinessIdSalesRouteImport } from './routes/(private)/business/$id/sales'
import { Route as privateBusinessIdProvidersRouteImport } from './routes/(private)/business/$id/providers'
import { Route as privateBusinessIdConfigRouteImport } from './routes/(private)/business/$id/config'
import { Route as privateBusinessIdClientsRouteImport } from './routes/(private)/business/$id/clients'
import { Route as privateBusinessIdProductsIndexRouteImport } from './routes/(private)/business/$id/products/index'
import { Route as privateBusinessIdGroupsIndexRouteImport } from './routes/(private)/business/$id/groups/index'
import { Route as privateBusinessIdEmployeesIndexRouteImport } from './routes/(private)/business/$id/employees/index'
import { Route as privateBusinessIdCategoriesIndexRouteImport } from './routes/(private)/business/$id/categories/index'
import { Route as privateBusinessIdProductsCreateRouteImport } from './routes/(private)/business/$id/products/create'
import { Route as privateBusinessIdGroupsCreateRouteImport } from './routes/(private)/business/$id/groups/create'
import { Route as privateBusinessIdGroupsGroupidRouteImport } from './routes/(private)/business/$id/groups/$groupid'
import { Route as privateBusinessIdEmployeesCreateRouteImport } from './routes/(private)/business/$id/employees/create'
import { Route as privateBusinessIdEmployeesEmployeeidRouteImport } from './routes/(private)/business/$id/employees/$employeeid'
import { Route as privateBusinessIdCategoriesCategoryidRouteImport } from './routes/(private)/business/$id/categories/$categoryid'
import { Route as privateBusinessIdProductsProductidIndexRouteImport } from './routes/(private)/business/$id/products/$productid/index'
import { Route as privateBusinessIdProductsProductidUpdateRouteImport } from './routes/(private)/business/$id/products/$productid/update'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthEmployeeSignInRoute = AuthEmployeeSignInRouteImport.update({
  id: '/auth/employee/sign-in',
  path: '/auth/employee/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const privateBusinessSelectBusinessRoute =
  privateBusinessSelectBusinessRouteImport.update({
    id: '/(private)/business/select-business',
    path: '/business/select-business',
    getParentRoute: () => rootRouteImport,
  } as any)
const privateBusinessRegisterRoute = privateBusinessRegisterRouteImport.update({
  id: '/(private)/business/register',
  path: '/business/register',
  getParentRoute: () => rootRouteImport,
} as any)
const privateBusinessIdRoute = privateBusinessIdRouteImport.update({
  id: '/(private)/business/$id',
  path: '/business/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const privateBusinessIdIndexRoute = privateBusinessIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => privateBusinessIdRoute,
} as any)
const privateBusinessIdSettingsRoute =
  privateBusinessIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdSalesRoute = privateBusinessIdSalesRouteImport.update({
  id: '/sales',
  path: '/sales',
  getParentRoute: () => privateBusinessIdRoute,
} as any)
const privateBusinessIdProvidersRoute =
  privateBusinessIdProvidersRouteImport.update({
    id: '/providers',
    path: '/providers',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdConfigRoute = privateBusinessIdConfigRouteImport.update({
  id: '/config',
  path: '/config',
  getParentRoute: () => privateBusinessIdRoute,
} as any)
const privateBusinessIdClientsRoute =
  privateBusinessIdClientsRouteImport.update({
    id: '/clients',
    path: '/clients',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdProductsIndexRoute =
  privateBusinessIdProductsIndexRouteImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdGroupsIndexRoute =
  privateBusinessIdGroupsIndexRouteImport.update({
    id: '/groups/',
    path: '/groups/',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdEmployeesIndexRoute =
  privateBusinessIdEmployeesIndexRouteImport.update({
    id: '/employees/',
    path: '/employees/',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdCategoriesIndexRoute =
  privateBusinessIdCategoriesIndexRouteImport.update({
    id: '/categories/',
    path: '/categories/',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdProductsCreateRoute =
  privateBusinessIdProductsCreateRouteImport.update({
    id: '/products/create',
    path: '/products/create',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdGroupsCreateRoute =
  privateBusinessIdGroupsCreateRouteImport.update({
    id: '/groups/create',
    path: '/groups/create',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdGroupsGroupidRoute =
  privateBusinessIdGroupsGroupidRouteImport.update({
    id: '/groups/$groupid',
    path: '/groups/$groupid',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdEmployeesCreateRoute =
  privateBusinessIdEmployeesCreateRouteImport.update({
    id: '/employees/create',
    path: '/employees/create',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdEmployeesEmployeeidRoute =
  privateBusinessIdEmployeesEmployeeidRouteImport.update({
    id: '/employees/$employeeid',
    path: '/employees/$employeeid',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdCategoriesCategoryidRoute =
  privateBusinessIdCategoriesCategoryidRouteImport.update({
    id: '/categories/$categoryid',
    path: '/categories/$categoryid',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdProductsProductidIndexRoute =
  privateBusinessIdProductsProductidIndexRouteImport.update({
    id: '/products/$productid/',
    path: '/products/$productid/',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)
const privateBusinessIdProductsProductidUpdateRoute =
  privateBusinessIdProductsProductidUpdateRouteImport.update({
    id: '/products/$productid/update',
    path: '/products/$productid/update',
    getParentRoute: () => privateBusinessIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/business/$id': typeof privateBusinessIdRouteWithChildren
  '/business/register': typeof privateBusinessRegisterRoute
  '/business/select-business': typeof privateBusinessSelectBusinessRoute
  '/auth/employee/sign-in': typeof AuthEmployeeSignInRoute
  '/business/$id/clients': typeof privateBusinessIdClientsRoute
  '/business/$id/config': typeof privateBusinessIdConfigRoute
  '/business/$id/providers': typeof privateBusinessIdProvidersRoute
  '/business/$id/sales': typeof privateBusinessIdSalesRoute
  '/business/$id/settings': typeof privateBusinessIdSettingsRoute
  '/business/$id/': typeof privateBusinessIdIndexRoute
  '/business/$id/categories/$categoryid': typeof privateBusinessIdCategoriesCategoryidRoute
  '/business/$id/employees/$employeeid': typeof privateBusinessIdEmployeesEmployeeidRoute
  '/business/$id/employees/create': typeof privateBusinessIdEmployeesCreateRoute
  '/business/$id/groups/$groupid': typeof privateBusinessIdGroupsGroupidRoute
  '/business/$id/groups/create': typeof privateBusinessIdGroupsCreateRoute
  '/business/$id/products/create': typeof privateBusinessIdProductsCreateRoute
  '/business/$id/categories': typeof privateBusinessIdCategoriesIndexRoute
  '/business/$id/employees': typeof privateBusinessIdEmployeesIndexRoute
  '/business/$id/groups': typeof privateBusinessIdGroupsIndexRoute
  '/business/$id/products': typeof privateBusinessIdProductsIndexRoute
  '/business/$id/products/$productid/update': typeof privateBusinessIdProductsProductidUpdateRoute
  '/business/$id/products/$productid': typeof privateBusinessIdProductsProductidIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/business/register': typeof privateBusinessRegisterRoute
  '/business/select-business': typeof privateBusinessSelectBusinessRoute
  '/auth/employee/sign-in': typeof AuthEmployeeSignInRoute
  '/business/$id/clients': typeof privateBusinessIdClientsRoute
  '/business/$id/config': typeof privateBusinessIdConfigRoute
  '/business/$id/providers': typeof privateBusinessIdProvidersRoute
  '/business/$id/sales': typeof privateBusinessIdSalesRoute
  '/business/$id/settings': typeof privateBusinessIdSettingsRoute
  '/business/$id': typeof privateBusinessIdIndexRoute
  '/business/$id/categories/$categoryid': typeof privateBusinessIdCategoriesCategoryidRoute
  '/business/$id/employees/$employeeid': typeof privateBusinessIdEmployeesEmployeeidRoute
  '/business/$id/employees/create': typeof privateBusinessIdEmployeesCreateRoute
  '/business/$id/groups/$groupid': typeof privateBusinessIdGroupsGroupidRoute
  '/business/$id/groups/create': typeof privateBusinessIdGroupsCreateRoute
  '/business/$id/products/create': typeof privateBusinessIdProductsCreateRoute
  '/business/$id/categories': typeof privateBusinessIdCategoriesIndexRoute
  '/business/$id/employees': typeof privateBusinessIdEmployeesIndexRoute
  '/business/$id/groups': typeof privateBusinessIdGroupsIndexRoute
  '/business/$id/products': typeof privateBusinessIdProductsIndexRoute
  '/business/$id/products/$productid/update': typeof privateBusinessIdProductsProductidUpdateRoute
  '/business/$id/products/$productid': typeof privateBusinessIdProductsProductidIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/(private)/business/$id': typeof privateBusinessIdRouteWithChildren
  '/(private)/business/register': typeof privateBusinessRegisterRoute
  '/(private)/business/select-business': typeof privateBusinessSelectBusinessRoute
  '/auth/employee/sign-in': typeof AuthEmployeeSignInRoute
  '/(private)/business/$id/clients': typeof privateBusinessIdClientsRoute
  '/(private)/business/$id/config': typeof privateBusinessIdConfigRoute
  '/(private)/business/$id/providers': typeof privateBusinessIdProvidersRoute
  '/(private)/business/$id/sales': typeof privateBusinessIdSalesRoute
  '/(private)/business/$id/settings': typeof privateBusinessIdSettingsRoute
  '/(private)/business/$id/': typeof privateBusinessIdIndexRoute
  '/(private)/business/$id/categories/$categoryid': typeof privateBusinessIdCategoriesCategoryidRoute
  '/(private)/business/$id/employees/$employeeid': typeof privateBusinessIdEmployeesEmployeeidRoute
  '/(private)/business/$id/employees/create': typeof privateBusinessIdEmployeesCreateRoute
  '/(private)/business/$id/groups/$groupid': typeof privateBusinessIdGroupsGroupidRoute
  '/(private)/business/$id/groups/create': typeof privateBusinessIdGroupsCreateRoute
  '/(private)/business/$id/products/create': typeof privateBusinessIdProductsCreateRoute
  '/(private)/business/$id/categories/': typeof privateBusinessIdCategoriesIndexRoute
  '/(private)/business/$id/employees/': typeof privateBusinessIdEmployeesIndexRoute
  '/(private)/business/$id/groups/': typeof privateBusinessIdGroupsIndexRoute
  '/(private)/business/$id/products/': typeof privateBusinessIdProductsIndexRoute
  '/(private)/business/$id/products/$productid/update': typeof privateBusinessIdProductsProductidUpdateRoute
  '/(private)/business/$id/products/$productid/': typeof privateBusinessIdProductsProductidIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/business/$id'
    | '/business/register'
    | '/business/select-business'
    | '/auth/employee/sign-in'
    | '/business/$id/clients'
    | '/business/$id/config'
    | '/business/$id/providers'
    | '/business/$id/sales'
    | '/business/$id/settings'
    | '/business/$id/'
    | '/business/$id/categories/$categoryid'
    | '/business/$id/employees/$employeeid'
    | '/business/$id/employees/create'
    | '/business/$id/groups/$groupid'
    | '/business/$id/groups/create'
    | '/business/$id/products/create'
    | '/business/$id/categories'
    | '/business/$id/employees'
    | '/business/$id/groups'
    | '/business/$id/products'
    | '/business/$id/products/$productid/update'
    | '/business/$id/products/$productid'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/business/register'
    | '/business/select-business'
    | '/auth/employee/sign-in'
    | '/business/$id/clients'
    | '/business/$id/config'
    | '/business/$id/providers'
    | '/business/$id/sales'
    | '/business/$id/settings'
    | '/business/$id'
    | '/business/$id/categories/$categoryid'
    | '/business/$id/employees/$employeeid'
    | '/business/$id/employees/create'
    | '/business/$id/groups/$groupid'
    | '/business/$id/groups/create'
    | '/business/$id/products/create'
    | '/business/$id/categories'
    | '/business/$id/employees'
    | '/business/$id/groups'
    | '/business/$id/products'
    | '/business/$id/products/$productid/update'
    | '/business/$id/products/$productid'
  id:
    | '__root__'
    | '/'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/(private)/business/$id'
    | '/(private)/business/register'
    | '/(private)/business/select-business'
    | '/auth/employee/sign-in'
    | '/(private)/business/$id/clients'
    | '/(private)/business/$id/config'
    | '/(private)/business/$id/providers'
    | '/(private)/business/$id/sales'
    | '/(private)/business/$id/settings'
    | '/(private)/business/$id/'
    | '/(private)/business/$id/categories/$categoryid'
    | '/(private)/business/$id/employees/$employeeid'
    | '/(private)/business/$id/employees/create'
    | '/(private)/business/$id/groups/$groupid'
    | '/(private)/business/$id/groups/create'
    | '/(private)/business/$id/products/create'
    | '/(private)/business/$id/categories/'
    | '/(private)/business/$id/employees/'
    | '/(private)/business/$id/groups/'
    | '/(private)/business/$id/products/'
    | '/(private)/business/$id/products/$productid/update'
    | '/(private)/business/$id/products/$productid/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  privateBusinessIdRoute: typeof privateBusinessIdRouteWithChildren
  privateBusinessRegisterRoute: typeof privateBusinessRegisterRoute
  privateBusinessSelectBusinessRoute: typeof privateBusinessSelectBusinessRoute
  AuthEmployeeSignInRoute: typeof AuthEmployeeSignInRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/employee/sign-in': {
      id: '/auth/employee/sign-in'
      path: '/auth/employee/sign-in'
      fullPath: '/auth/employee/sign-in'
      preLoaderRoute: typeof AuthEmployeeSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(private)/business/select-business': {
      id: '/(private)/business/select-business'
      path: '/business/select-business'
      fullPath: '/business/select-business'
      preLoaderRoute: typeof privateBusinessSelectBusinessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(private)/business/register': {
      id: '/(private)/business/register'
      path: '/business/register'
      fullPath: '/business/register'
      preLoaderRoute: typeof privateBusinessRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(private)/business/$id': {
      id: '/(private)/business/$id'
      path: '/business/$id'
      fullPath: '/business/$id'
      preLoaderRoute: typeof privateBusinessIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(private)/business/$id/': {
      id: '/(private)/business/$id/'
      path: '/'
      fullPath: '/business/$id/'
      preLoaderRoute: typeof privateBusinessIdIndexRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/settings': {
      id: '/(private)/business/$id/settings'
      path: '/settings'
      fullPath: '/business/$id/settings'
      preLoaderRoute: typeof privateBusinessIdSettingsRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/sales': {
      id: '/(private)/business/$id/sales'
      path: '/sales'
      fullPath: '/business/$id/sales'
      preLoaderRoute: typeof privateBusinessIdSalesRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/providers': {
      id: '/(private)/business/$id/providers'
      path: '/providers'
      fullPath: '/business/$id/providers'
      preLoaderRoute: typeof privateBusinessIdProvidersRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/config': {
      id: '/(private)/business/$id/config'
      path: '/config'
      fullPath: '/business/$id/config'
      preLoaderRoute: typeof privateBusinessIdConfigRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/clients': {
      id: '/(private)/business/$id/clients'
      path: '/clients'
      fullPath: '/business/$id/clients'
      preLoaderRoute: typeof privateBusinessIdClientsRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/products/': {
      id: '/(private)/business/$id/products/'
      path: '/products'
      fullPath: '/business/$id/products'
      preLoaderRoute: typeof privateBusinessIdProductsIndexRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/groups/': {
      id: '/(private)/business/$id/groups/'
      path: '/groups'
      fullPath: '/business/$id/groups'
      preLoaderRoute: typeof privateBusinessIdGroupsIndexRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/employees/': {
      id: '/(private)/business/$id/employees/'
      path: '/employees'
      fullPath: '/business/$id/employees'
      preLoaderRoute: typeof privateBusinessIdEmployeesIndexRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/categories/': {
      id: '/(private)/business/$id/categories/'
      path: '/categories'
      fullPath: '/business/$id/categories'
      preLoaderRoute: typeof privateBusinessIdCategoriesIndexRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/products/create': {
      id: '/(private)/business/$id/products/create'
      path: '/products/create'
      fullPath: '/business/$id/products/create'
      preLoaderRoute: typeof privateBusinessIdProductsCreateRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/groups/create': {
      id: '/(private)/business/$id/groups/create'
      path: '/groups/create'
      fullPath: '/business/$id/groups/create'
      preLoaderRoute: typeof privateBusinessIdGroupsCreateRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/groups/$groupid': {
      id: '/(private)/business/$id/groups/$groupid'
      path: '/groups/$groupid'
      fullPath: '/business/$id/groups/$groupid'
      preLoaderRoute: typeof privateBusinessIdGroupsGroupidRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/employees/create': {
      id: '/(private)/business/$id/employees/create'
      path: '/employees/create'
      fullPath: '/business/$id/employees/create'
      preLoaderRoute: typeof privateBusinessIdEmployeesCreateRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/employees/$employeeid': {
      id: '/(private)/business/$id/employees/$employeeid'
      path: '/employees/$employeeid'
      fullPath: '/business/$id/employees/$employeeid'
      preLoaderRoute: typeof privateBusinessIdEmployeesEmployeeidRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/categories/$categoryid': {
      id: '/(private)/business/$id/categories/$categoryid'
      path: '/categories/$categoryid'
      fullPath: '/business/$id/categories/$categoryid'
      preLoaderRoute: typeof privateBusinessIdCategoriesCategoryidRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/products/$productid/': {
      id: '/(private)/business/$id/products/$productid/'
      path: '/products/$productid'
      fullPath: '/business/$id/products/$productid'
      preLoaderRoute: typeof privateBusinessIdProductsProductidIndexRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
    '/(private)/business/$id/products/$productid/update': {
      id: '/(private)/business/$id/products/$productid/update'
      path: '/products/$productid/update'
      fullPath: '/business/$id/products/$productid/update'
      preLoaderRoute: typeof privateBusinessIdProductsProductidUpdateRouteImport
      parentRoute: typeof privateBusinessIdRoute
    }
  }
}

interface privateBusinessIdRouteChildren {
  privateBusinessIdClientsRoute: typeof privateBusinessIdClientsRoute
  privateBusinessIdConfigRoute: typeof privateBusinessIdConfigRoute
  privateBusinessIdProvidersRoute: typeof privateBusinessIdProvidersRoute
  privateBusinessIdSalesRoute: typeof privateBusinessIdSalesRoute
  privateBusinessIdSettingsRoute: typeof privateBusinessIdSettingsRoute
  privateBusinessIdIndexRoute: typeof privateBusinessIdIndexRoute
  privateBusinessIdCategoriesCategoryidRoute: typeof privateBusinessIdCategoriesCategoryidRoute
  privateBusinessIdEmployeesEmployeeidRoute: typeof privateBusinessIdEmployeesEmployeeidRoute
  privateBusinessIdEmployeesCreateRoute: typeof privateBusinessIdEmployeesCreateRoute
  privateBusinessIdGroupsGroupidRoute: typeof privateBusinessIdGroupsGroupidRoute
  privateBusinessIdGroupsCreateRoute: typeof privateBusinessIdGroupsCreateRoute
  privateBusinessIdProductsCreateRoute: typeof privateBusinessIdProductsCreateRoute
  privateBusinessIdCategoriesIndexRoute: typeof privateBusinessIdCategoriesIndexRoute
  privateBusinessIdEmployeesIndexRoute: typeof privateBusinessIdEmployeesIndexRoute
  privateBusinessIdGroupsIndexRoute: typeof privateBusinessIdGroupsIndexRoute
  privateBusinessIdProductsIndexRoute: typeof privateBusinessIdProductsIndexRoute
  privateBusinessIdProductsProductidUpdateRoute: typeof privateBusinessIdProductsProductidUpdateRoute
  privateBusinessIdProductsProductidIndexRoute: typeof privateBusinessIdProductsProductidIndexRoute
}

const privateBusinessIdRouteChildren: privateBusinessIdRouteChildren = {
  privateBusinessIdClientsRoute: privateBusinessIdClientsRoute,
  privateBusinessIdConfigRoute: privateBusinessIdConfigRoute,
  privateBusinessIdProvidersRoute: privateBusinessIdProvidersRoute,
  privateBusinessIdSalesRoute: privateBusinessIdSalesRoute,
  privateBusinessIdSettingsRoute: privateBusinessIdSettingsRoute,
  privateBusinessIdIndexRoute: privateBusinessIdIndexRoute,
  privateBusinessIdCategoriesCategoryidRoute:
    privateBusinessIdCategoriesCategoryidRoute,
  privateBusinessIdEmployeesEmployeeidRoute:
    privateBusinessIdEmployeesEmployeeidRoute,
  privateBusinessIdEmployeesCreateRoute: privateBusinessIdEmployeesCreateRoute,
  privateBusinessIdGroupsGroupidRoute: privateBusinessIdGroupsGroupidRoute,
  privateBusinessIdGroupsCreateRoute: privateBusinessIdGroupsCreateRoute,
  privateBusinessIdProductsCreateRoute: privateBusinessIdProductsCreateRoute,
  privateBusinessIdCategoriesIndexRoute: privateBusinessIdCategoriesIndexRoute,
  privateBusinessIdEmployeesIndexRoute: privateBusinessIdEmployeesIndexRoute,
  privateBusinessIdGroupsIndexRoute: privateBusinessIdGroupsIndexRoute,
  privateBusinessIdProductsIndexRoute: privateBusinessIdProductsIndexRoute,
  privateBusinessIdProductsProductidUpdateRoute:
    privateBusinessIdProductsProductidUpdateRoute,
  privateBusinessIdProductsProductidIndexRoute:
    privateBusinessIdProductsProductidIndexRoute,
}

const privateBusinessIdRouteWithChildren =
  privateBusinessIdRoute._addFileChildren(privateBusinessIdRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  privateBusinessIdRoute: privateBusinessIdRouteWithChildren,
  privateBusinessRegisterRoute: privateBusinessRegisterRoute,
  privateBusinessSelectBusinessRoute: privateBusinessSelectBusinessRoute,
  AuthEmployeeSignInRoute: AuthEmployeeSignInRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
